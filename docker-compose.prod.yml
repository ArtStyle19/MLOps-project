# # docker-compose.prod.yml
# version: "3.9"

# services:
#   traefik:
#     image: traefik:v3.0
#     container_name: traefik
#     restart: unless-stopped
#     command:
#       - --global.sendAnonymousUsage=false
#       - --log.level=INFO

#       # Entrypoints
#       - --entrypoints.web.address=:80
#       - --entrypoints.websecure.address=:443

#       # Providers
#       - --providers.docker=true
#       - --providers.docker.exposedbydefault=false

#       # Let's Encrypt (ACME) HTTP challenge
#       # - --certificatesresolvers.le.acme.tlschallenge=false
#       - --certificatesresolvers.le.acme.tlschallenge=true # Use TLS challenge instead of HTTP
#       # - --certificatesresolvers.le.acme.httpchallenge=true
#       # - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
#       - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL:-jorgeguillermoolarte@gmail.com}
#       - --certificatesresolvers.le.acme.storage=/data/acme.json

#       # Dashboard (optional)
#       - --api=true
#       - --api.dashboard=true

#     ports:
#       - "80:80"
#       - "443:443"
#       - "8080:8080" # optional Traefik dashboard port if you want external access

#     environment:
#       - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-jorgeguillermoolarte@gmail.com}
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#       - traefik_acme:/data
#       - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
#       - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro

#     labels:
#       # Expose dashboard on internal network only; comment out or secure if enabling externally
#       - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST:-traefik.settinel.lat}`)"
#       - "traefik.http.routers.traefik.entrypoints=websecure"
#       - "traefik.http.routers.traefik.tls=true"
#       - "traefik.http.routers.traefik.tls.certresolver=le"
#       - "traefik.enable=true"

#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     image: ${DOCKERHUB_USER:-guillermoolarte}/fullstack-backend:${BACKEND_TAG:-latest}
#     container_name: fullstack_backend
#     restart: unless-stopped
#     expose:
#       - "5000"
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.backend.rule=Host(`${API_DOMAIN:-api.settinel.lat}`) && PathPrefix(`/api`)"
#       - "traefik.http.routers.backend.entrypoints=websecure"
#       - "traefik.http.routers.backend.tls=true"
#       - "traefik.http.routers.backend.tls.certresolver=le"
#       - "traefik.http.services.backend.loadbalancer.server.port=5000"

#     environment:
#       - FLASK_ENV=production

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     image: ${DOCKERHUB_USER:-guillermoolarte}/fullstack-frontend:${FRONTEND_TAG:-latest}
#     container_name: fullstack_frontend
#     restart: unless-stopped
#     expose:
#       - "80"
#     labels:
#       - "traefik.enable=true"
#       - "traefik.http.routers.frontend.rule=Host(`${DOMAIN:-settinel.lat}`)"
#       - "traefik.http.routers.frontend.entrypoints=websecure"
#       - "traefik.http.routers.frontend.tls=true"
#         # Redirect HTTP to HTTPS
#       - "traefik.http.routers.frontend-redirect.rule=Host(`${DOMAIN:-settinel.lat}`) || Host(`www.${DOMAIN:-settinel.lat}`)"
#       - "traefik.http.routers.frontend-redirect.entrypoints=web"
#       - "traefik.http.routers.frontend-redirect.middlewares=redirect-to-https"
#       - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

#       - "traefik.http.routers.frontend.tls.certresolver=le"
#       - "traefik.http.services.frontend.loadbalancer.server.port=80"

# volumes:
#   traefik_acme:

version: "3.9"

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"

    environment:
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-jorgeguillermoolarte@gmail.com}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_acme:/data
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro

    labels:
      - "traefik.enable=true"
      # Dashboard (optional - remove if you don't want external access)
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST:-traefik.settinel.lat}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.service=api@internal"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USER:-guillermoolarte}/fullstack-backend:${BACKEND_TAG:-latest}
    container_name: fullstack_backend
    restart: unless-stopped
    expose:
      - "5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${API_DOMAIN:-api.settinel.lat}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"
      - "traefik.http.routers.backend.middlewares=secure-headers@file"

      # WebSocket routes
      - "traefik.http.routers.backend-websocket.rule=Host(`${API_DOMAIN:-api.settinel.lat}`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.backend-websocket.entrypoints=websecure"
      - "traefik.http.routers.backend-websocket.tls=true"
      - "traefik.http.routers.backend-websocket.tls.certresolver=le"
      - "traefik.http.routers.backend-websocket.middlewares=secure-headers@file,websocket-headers@file"

    environment:
      - FLASK_ENV=production
      - PORT=${PORT:-5000}
      - LOCAL_MODEL_PATH=${LOCAL_MODEL_PATH:-/app/weights/epoch20.pt}
      # NOTA: si usas EC2 con role, NO pongas AWS keys en .env (boto3 utilizar√° role)
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET=${S3_BUCKET}
      - S3_KEY=${S3_KEY}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USER:-guillermoolarte}/fullstack-frontend:${FRONTEND_TAG:-latest}
    container_name: fullstack_frontend
    restart: unless-stopped
    expose:
      - "80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN:-settinel.lat}`) || Host(`www.${DOMAIN:-settinel.lat}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=le"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.middlewares=secure-headers@file"

      # HTTP to HTTPS redirect
      - "traefik.http.routers.frontend-redirect.rule=Host(`${DOMAIN:-settinel.lat}`) || Host(`www.${DOMAIN:-settinel.lat}`)"
      - "traefik.http.routers.frontend-redirect.entrypoints=web"
      - "traefik.http.routers.frontend-redirect.middlewares=redirect-to-https@file"

volumes:
  traefik_acme:
