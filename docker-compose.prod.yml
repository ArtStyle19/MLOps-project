# docker-compose.prod.yml
version: "3.9"

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    command:
      - --global.sendAnonymousUsage=false
      - --log.level=INFO

      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Providers
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false

      # Let's Encrypt (ACME) HTTP challenge
      - --certificatesresolvers.le.acme.tlschallenge=false
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.le.acme.storage=/data/acme.json

      # Dashboard (optional)
      - --api=true
      - --api.dashboard=true

    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"  # optional Traefik dashboard port if you want external access

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_acme:/data
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro

    labels:
      # Expose dashboard on internal network only; comment out or secure if enabling externally
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST:-traefik.${DOMAIN}}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.enable=true"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USER:-guillermoolarte}/fullstack-backend:${BACKEND_TAG:-latest}
    container_name: fullstack_backend
    restart: unless-stopped
    expose:
      - "5000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${API_DOMAIN:-api.${DOMAIN}`}) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.services.backend.loadbalancer.server.port=5000"

    environment:
      - FLASK_ENV=production

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${DOCKERHUB_USER:-guillermoolarte}/fullstack-frontend:${FRONTEND_TAG:-latest}
    container_name: fullstack_frontend
    restart: unless-stopped
    expose:
      - "80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=le"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

volumes:
  traefik_acme:
